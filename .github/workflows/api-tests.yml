name: Playwright WordPress API Tests
 
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch: 
 
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
 
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
 
    - name: Install dependencies
      run: npm ci
 
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
 
    - name: Run Playwright tests
      run: npx playwright test
      env:
        WORDPRESS_BASE_URL: ${{ secrets.WORDPRESS_BASE_URL }}
        WORDPRESS_USERNAME: ${{ secrets.WORDPRESS_USERNAME }}
        WORDPRESS_PASSWORD: ${{ secrets.WORDPRESS_PASSWORD }}
        # Или используйте API токен если есть
        WORDPRESS_API_TOKEN: ${{ secrets.WORDPRESS_API_TOKEN }}
 
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-node${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 30
 
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node${{ matrix.node-version }}
        path: test-results/
        retention-days: 30
 
  
  publish-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    permissions:
      pages: write
      id-token: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: playwright-report-node20
        path: playwright-report/
 
    - name: Setup Pages
      uses: actions/configure-pages@v4
 
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: playwright-report/
 
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
 
 
  notify:
    needs: test
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Notify on failure
      run: |
        echo "Tests failed! Check the workflow logs."